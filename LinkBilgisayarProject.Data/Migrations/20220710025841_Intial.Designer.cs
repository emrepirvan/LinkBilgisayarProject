// <auto-generated />
using System;
using LinkBilgisayarProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LinkBilgisayarProject.Data.Migrations
{
    [DbContext(typeof(LinkAppDbContext))]
    [Migration("20220710025841_Intial")]
    partial class Intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LinkBilgisayarProject.Core.Entites.CommercialActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CommercialActivities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityDate = new DateTime(2022, 7, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            CustomerId = 1,
                            Price = 8800m,
                            ServiceDescription = "Kırık Kılıç onarıldı"
                        },
                        new
                        {
                            Id = 2,
                            ActivityDate = new DateTime(2022, 7, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            CustomerId = 2,
                            Price = 2300m,
                            ServiceDescription = "Baykuş satıldı"
                        });
                });

            modelBuilder.Entity("LinkBilgisayarProject.Core.Entites.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Batı Ağıl",
                            Email = "Aragorn@gmail.com",
                            Name = "Aragorn",
                            PhoneNumber = "12312312",
                            PhotoUrl = "aragorn.img",
                            Surname = "Arathorn"
                        },
                        new
                        {
                            Id = 2,
                            City = "Londra",
                            Email = "expecto@gmail.com",
                            Name = "Harry",
                            PhoneNumber = "02222222",
                            PhotoUrl = "harry.img",
                            Surname = "Potter"
                        });
                });

            modelBuilder.Entity("LinkBilgisayarProject.Core.Entites.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdmin = true,
                            Password = "12345",
                            Username = "Gandalf"
                        },
                        new
                        {
                            Id = 2,
                            IsAdmin = false,
                            Password = "987654",
                            Username = "Frodo"
                        },
                        new
                        {
                            Id = 3,
                            IsAdmin = true,
                            Password = "00000",
                            Username = "Gimli"
                        });
                });

            modelBuilder.Entity("LinkBilgisayarProject.Core.Entites.WeeklyReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ReportUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("WeeklyReports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            ReportUrl = "AragornUrlReport"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            ReportUrl = "HarryReport"
                        });
                });

            modelBuilder.Entity("LinkBilgisayarProject.Core.Entites.CommercialActivity", b =>
                {
                    b.HasOne("LinkBilgisayarProject.Core.Entites.Customer", "Customer")
                        .WithMany("CommercialActivities")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LinkBilgisayarProject.Core.Entites.WeeklyReport", b =>
                {
                    b.HasOne("LinkBilgisayarProject.Core.Entites.Customer", "Customer")
                        .WithMany("WeeklyReports")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LinkBilgisayarProject.Core.Entites.Customer", b =>
                {
                    b.Navigation("CommercialActivities");

                    b.Navigation("WeeklyReports");
                });
#pragma warning restore 612, 618
        }
    }
}
